services:
  # PostgreSQL Database (v17 - compatible with local PGAdmin)
  postgres:
    image: postgres:17-alpine
    container_name: weatherai-postgres
    environment:
      - POSTGRES_DB=WeatherAI
      - POSTGRES_USER=weatherai
      - POSTGRES_PASSWORD=Your_password123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weatherai -d WeatherAI"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weatherai-network
    # PGAdmin Connection Info:
    # Host: localhost (or 127.0.0.1)
    # Port: 5432
    # Database: WeatherAI
    # Username: weatherai
    # Password: Your_password123

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: weatherai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - weatherai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: weatherai-backend
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DEBUG=true
      - DEV_FALLBACK=true
      - DB_DIALECT=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=WeatherAI
      - POSTGRES_USER=weatherai
      - POSTGRES_PASSWORD=Your_password123
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-secret-change-in-production
      - CORS_ORIGINS=["http://localhost:5173"]
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - weatherai-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: weatherai-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - weatherai-network
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  weatherai-network:
    driver: bridge