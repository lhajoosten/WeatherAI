version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: weatherai-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - weatherai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: weatherai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - weatherai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: weatherai-backend
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DEBUG=true
      - DB_SERVER=sqlserver
      - DB_PORT=1433
      - DB_NAME=WeatherAI
      - DB_USER=sa
      - DB_PASSWORD=Your_password123
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-secret-change-in-production
      - CORS_ORIGINS=["http://localhost:5173", "http://localhost:3000"]
    depends_on:
      - sqlserver
      - redis
    volumes:
      - ./backend:/app
    networks:
      - weatherai-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: weatherai-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - weatherai-network
    depends_on:
      - backend

volumes:
  sqlserver_data:
  redis_data:

networks:
  weatherai-network:
    driver: bridge