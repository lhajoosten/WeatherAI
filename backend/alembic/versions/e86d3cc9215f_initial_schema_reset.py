"""initial_schema_reset

Revision ID: e86d3cc9215f
Revises: 20250825_0001
Create Date: 2025-08-25 15:41:38.836483

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e86d3cc9215f'
down_revision: Union[str, Sequence[str], None] = '20250825_0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('prefs_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('analytics_query_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('params_json', sa.Text(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('rows_returned', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_query_audit_id'), 'analytics_query_audit', ['id'], unique=False)
    op.create_table('llm_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('prompt_summary', sa.String(length=200), nullable=False),
    sa.Column('tokens_in', sa.Integer(), nullable=False),
    sa.Column('tokens_out', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('has_air_quality', sa.Boolean(), nullable=True),
    sa.Column('has_astronomy', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_audit_id'), 'llm_audit', ['id'], unique=False)
    op.create_table('location_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_groups_id'), 'location_groups', ['id'], unique=False)
    op.create_index('ix_location_groups_user_name', 'location_groups', ['user_id', 'name'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('time_zone', sa.String(length=50), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('theme_preference', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_index('ix_user_profiles_user_id', 'user_profiles', ['user_id'], unique=False)
    op.create_table('aggregation_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('temp_min_c', sa.Float(), nullable=True),
    sa.Column('temp_max_c', sa.Float(), nullable=True),
    sa.Column('avg_temp_c', sa.Float(), nullable=True),
    sa.Column('total_precip_mm', sa.Float(), nullable=True),
    sa.Column('max_wind_kph', sa.Float(), nullable=True),
    sa.Column('heating_degree_days', sa.Float(), nullable=True),
    sa.Column('cooling_degree_days', sa.Float(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aggregation_daily_id'), 'aggregation_daily', ['id'], unique=False)
    op.create_index('ix_aggregation_daily_location_date', 'aggregation_daily', ['location_id', 'date'], unique=False)
    op.create_table('air_quality_hourly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('observed_at', sa.DateTime(), nullable=False),
    sa.Column('pm10', sa.Float(), nullable=True),
    sa.Column('pm2_5', sa.Float(), nullable=True),
    sa.Column('ozone', sa.Float(), nullable=True),
    sa.Column('no2', sa.Float(), nullable=True),
    sa.Column('so2', sa.Float(), nullable=True),
    sa.Column('pollen_tree', sa.Float(), nullable=True),
    sa.Column('pollen_grass', sa.Float(), nullable=True),
    sa.Column('pollen_weed', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('raw_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_air_quality_hourly_id'), 'air_quality_hourly', ['id'], unique=False)
    op.create_index('ix_air_quality_hourly_location_time', 'air_quality_hourly', ['location_id', 'observed_at'], unique=False)
    op.create_index('ix_air_quality_hourly_location_time_source', 'air_quality_hourly', ['location_id', 'observed_at', 'source'], unique=True)
    op.create_table('astronomy_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('sunrise_utc', sa.DateTime(), nullable=True),
    sa.Column('sunset_utc', sa.DateTime(), nullable=True),
    sa.Column('daylight_minutes', sa.Integer(), nullable=True),
    sa.Column('moon_phase', sa.Float(), nullable=True),
    sa.Column('civil_twilight_start_utc', sa.DateTime(), nullable=True),
    sa.Column('civil_twilight_end_utc', sa.DateTime(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_astronomy_daily_id'), 'astronomy_daily', ['id'], unique=False)
    op.create_index('ix_astronomy_daily_location_date', 'astronomy_daily', ['location_id', 'date'], unique=True)
    op.create_table('forecast_accuracy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('target_time', sa.DateTime(), nullable=False),
    sa.Column('forecast_issue_time', sa.DateTime(), nullable=False),
    sa.Column('variable', sa.String(length=50), nullable=False),
    sa.Column('forecast_value', sa.Float(), nullable=True),
    sa.Column('observed_value', sa.Float(), nullable=True),
    sa.Column('abs_error', sa.Float(), nullable=True),
    sa.Column('pct_error', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forecast_accuracy_id'), 'forecast_accuracy', ['id'], unique=False)
    op.create_index('ix_forecast_accuracy_location_target', 'forecast_accuracy', ['location_id', 'target_time'], unique=False)
    op.create_table('forecast_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('payload_json', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forecast_cache_id'), 'forecast_cache', ['id'], unique=False)
    op.create_table('forecast_hourly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('forecast_issue_time', sa.DateTime(), nullable=False),
    sa.Column('target_time', sa.DateTime(), nullable=False),
    sa.Column('temp_c', sa.Float(), nullable=True),
    sa.Column('precipitation_probability_pct', sa.Float(), nullable=True),
    sa.Column('wind_kph', sa.Float(), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('source_run_id', sa.String(length=100), nullable=True),
    sa.Column('raw_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forecast_hourly_id'), 'forecast_hourly', ['id'], unique=False)
    op.create_index('ix_forecast_hourly_location_target', 'forecast_hourly', ['location_id', 'target_time'], unique=False)
    op.create_table('location_group_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['location_groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_group_members_id'), 'location_group_members', ['id'], unique=False)
    op.create_index('ix_location_group_members_unique', 'location_group_members', ['group_id', 'location_id'], unique=True)
    op.create_table('observation_hourly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('observed_at', sa.DateTime(), nullable=False),
    sa.Column('temp_c', sa.Float(), nullable=True),
    sa.Column('wind_kph', sa.Float(), nullable=True),
    sa.Column('precip_mm', sa.Float(), nullable=True),
    sa.Column('humidity_pct', sa.Float(), nullable=True),
    sa.Column('condition_code', sa.String(length=100), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('raw_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_observation_hourly_id'), 'observation_hourly', ['id'], unique=False)
    op.create_index('ix_observation_hourly_location_time', 'observation_hourly', ['location_id', 'observed_at'], unique=False)
    op.create_table('provider_run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=100), nullable=False),
    sa.Column('run_type', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('records_ingested', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provider_run_id'), 'provider_run', ['id'], unique=False)
    op.create_index('ix_provider_run_provider_type_started', 'provider_run', ['provider', 'run_type', 'started_at'], unique=False)
    op.create_table('trend_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('metric', sa.String(length=100), nullable=False),
    sa.Column('period', sa.String(length=20), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('previous_value', sa.Float(), nullable=True),
    sa.Column('delta', sa.Float(), nullable=True),
    sa.Column('pct_change', sa.Float(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trend_cache_id'), 'trend_cache', ['id'], unique=False)
    op.create_index('ix_trend_cache_unique', 'trend_cache', ['location_id', 'metric', 'period'], unique=True)
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('units_system', sa.String(length=20), nullable=True),
    sa.Column('dashboard_default_location_id', sa.Integer(), nullable=True),
    sa.Column('show_wind', sa.Boolean(), nullable=True),
    sa.Column('show_precip', sa.Boolean(), nullable=True),
    sa.Column('show_humidity', sa.Boolean(), nullable=True),
    sa.Column('json_settings', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dashboard_default_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_index('ix_user_preferences_user_id', 'user_preferences', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_preferences_user_id', table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_trend_cache_unique', table_name='trend_cache')
    op.drop_index(op.f('ix_trend_cache_id'), table_name='trend_cache')
    op.drop_table('trend_cache')
    op.drop_index('ix_provider_run_provider_type_started', table_name='provider_run')
    op.drop_index(op.f('ix_provider_run_id'), table_name='provider_run')
    op.drop_table('provider_run')
    op.drop_index('ix_observation_hourly_location_time', table_name='observation_hourly')
    op.drop_index(op.f('ix_observation_hourly_id'), table_name='observation_hourly')
    op.drop_table('observation_hourly')
    op.drop_index('ix_location_group_members_unique', table_name='location_group_members')
    op.drop_index(op.f('ix_location_group_members_id'), table_name='location_group_members')
    op.drop_table('location_group_members')
    op.drop_index('ix_forecast_hourly_location_target', table_name='forecast_hourly')
    op.drop_index(op.f('ix_forecast_hourly_id'), table_name='forecast_hourly')
    op.drop_table('forecast_hourly')
    op.drop_index(op.f('ix_forecast_cache_id'), table_name='forecast_cache')
    op.drop_table('forecast_cache')
    op.drop_index('ix_forecast_accuracy_location_target', table_name='forecast_accuracy')
    op.drop_index(op.f('ix_forecast_accuracy_id'), table_name='forecast_accuracy')
    op.drop_table('forecast_accuracy')
    op.drop_index('ix_astronomy_daily_location_date', table_name='astronomy_daily')
    op.drop_index(op.f('ix_astronomy_daily_id'), table_name='astronomy_daily')
    op.drop_table('astronomy_daily')
    op.drop_index('ix_air_quality_hourly_location_time_source', table_name='air_quality_hourly')
    op.drop_index('ix_air_quality_hourly_location_time', table_name='air_quality_hourly')
    op.drop_index(op.f('ix_air_quality_hourly_id'), table_name='air_quality_hourly')
    op.drop_table('air_quality_hourly')
    op.drop_index('ix_aggregation_daily_location_date', table_name='aggregation_daily')
    op.drop_index(op.f('ix_aggregation_daily_id'), table_name='aggregation_daily')
    op.drop_table('aggregation_daily')
    op.drop_index('ix_user_profiles_user_id', table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index('ix_location_groups_user_name', table_name='location_groups')
    op.drop_index(op.f('ix_location_groups_id'), table_name='location_groups')
    op.drop_table('location_groups')
    op.drop_index(op.f('ix_llm_audit_id'), table_name='llm_audit')
    op.drop_table('llm_audit')
    op.drop_index(op.f('ix_analytics_query_audit_id'), table_name='analytics_query_audit')
    op.drop_table('analytics_query_audit')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
